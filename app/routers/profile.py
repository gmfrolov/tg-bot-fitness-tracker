from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from app.states import UserProfile
from app.utils import calculations, weather_api
from app.storage import users

router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message):
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –±–æ—Ç—É.
    """
    await message.reply(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –Ω–æ—Ä–º—ã –≤–æ–¥—ã –∏ –∫–∞–ª–æ—Ä–∏–π.\n"
        "–Ø –ø–æ–º–æ–≥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–∏—Ç–∞–Ω–∏–µ, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤–æ–¥—ã.\n"
        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞—Å—Ç—Ä–æ–π —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–∞–Ω–¥–æ–π /set_profile.\n"
        "–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –≤–≤–µ–¥–∏ /help."
    )


@router.message(Command("help"))
async def cmd_help(message: Message):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ —Å –∫—Ä–∞—Ç–∫–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º.
    """
    await message.reply(
        "üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/set_profile ‚Äî –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å\n"
        "/change_calorie_goal ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª—å –ø–æ –∫–∞–ª–æ—Ä–∏—è–º\n"
        "/log_water <–æ–±—ä–µ–º –≤ –º–ª> ‚Äî –∑–∞–ø–∏—Å–∞—Ç—å –≤—ã–ø–∏—Ç—É—é –≤–æ–¥—É (–º–ª)\n"
        "/log_food <–Ω–∞–∑–≤–∞–Ω–∏–µ> ‚Äî –∑–∞–ø–∏—Å–∞—Ç—å —Å—ä–µ–¥–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç\n"
        "/log_workout <—Ç–∏–ø> <–≤—Ä–µ–º—è> ‚Äî –∑–∞–ø–∏—Å–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É\n"
        "/check_progress ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
    )
    

@router.message(Command('set_profile'))
async def start_set_profile(message: Message, state: FSMContext):
    await message.reply('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å (–≤ –∫–≥):')
    await state.set_state(UserProfile.weight)

@router.message(UserProfile.weight)
async def process_weight(message: Message,state: FSMContext):
    await state.update_data(weight=message.text)
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç (–≤ —Å–º):")
    await state.set_state(UserProfile.height)

@router.message(UserProfile.height)
async def process_height(message: Message,state: FSMContext):
    await state.update_data(height=message.text)
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:")
    await state.set_state(UserProfile.age)

@router.message(UserProfile.age)
async def process_age(message: Message,state: FSMContext):
    await state.update_data(age=message.text)
    await message.reply("–°–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —É –≤–∞—Å –≤ –¥–µ–Ω—å?")
    await state.set_state(UserProfile.activity)

@router.message(UserProfile.activity)
async def process_activity(message: Message,state: FSMContext):
    await state.update_data(activity=message.text)
    await message.reply("–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å?")
    await state.set_state(UserProfile.city)

@router.message(UserProfile.city)
async def process_city(message: Message, state: FSMContext):
    data = await state.get_data()
    data["weight"] = int(data["weight"])
    data["height"] = int(data["height"])
    data["age"] = int(data["age"])
    data["activity"] = int(data["activity"])
    data["city"] = message.text
    data["temperature"] = await weather_api.fetch_temperature(data["city"])
    data["water_goal"] = calculations.calc_norm_water(data["weight"], data["activity"], data["temperature"])
    data["calorie_goal"] = calculations.calc_norm_food(data["weight"], data["height"], data["age"], data["activity"])
    users[message.from_user.id] = data
    await message.reply(
        f"‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω!\n"
        f"–í–µ—Å: {data['weight']} –∫–≥\n–†–æ—Å—Ç: {data['height']} —Å–º\n–í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {data['activity']} –º–∏–Ω\n–ì–æ—Ä–æ–¥: {data['city']}\n"
        f"–í–∞—à–∞ –Ω–æ—Ä–º–∞ –≤–æ–¥—ã: {data['water_goal']} –º–ª\n–í–∞—à–∞ –Ω–æ—Ä–º–∞ –∫–∞–ª–ª–æ—Ä–∏–π: {data['calorie_goal']} –∫–∫–∞–ª\n\n"
        f"–ù–æ—Ä–º—É –∫–∞–ª–ª–æ—Ä–∏–π –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π: /change_calorie_goal"
    )
    await state.clear()

@router.message(Command('change_calorie_goal'))
async def cmd_change_calorie_goal(message: Message, state: FSMContext):
        await message.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–ª—å –ø–æ –∫–∞–ª–ª–æ—Ä–∏—è–º:")
        await state.set_state(UserProfile.calorie_goal)


@router.message(UserProfile.calorie_goal)
async def process_calorie_goal(message: Message, state: FSMContext):
    users[message.from_user.id]["calorie_goal"] = int(message.text)
    await message.reply(
        f"‚úÖ –ù–æ—Ä–º–∞ –∫–∞–ª–ª–æ—Ä–∏–π –∏–∑–º–µ–Ω–µ–Ω–∞!\n"
        f"–ù–æ–≤–∞—è —Ü–µ–ª—å: {users[message.from_user.id]['calorie_goal']}"
    )
    await state.clear()
